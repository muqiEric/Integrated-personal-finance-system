{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\n\n// 导入页面组件\nimport LoginPage from '../views/LoginPage.vue'; // 登录页面\nimport DetailsPage from '../views/DetailsPage.vue'; // 收支明细页面\nimport IncomePage from '../views/IncomePage.vue'; // 收入记账页面\nimport ExpensePage from '../views/ExpensePage.vue'; // 支出记账页面\n\n// 路由定义\nvar routes = [{\n  path: '/',\n  component: LoginPage\n},\n// 登录页面\n{\n  path: '/analysis',\n  component: DetailsPage\n},\n// 收支明细页面\n{\n  path: '/income',\n  component: IncomePage\n},\n// 收入记账页面\n{\n  path: '/expense',\n  component: ExpensePage\n} // 支出记账页面\n];\n\n// 创建路由实例\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: routes\n});\nexport default router;\nrouter.beforeEach(function (to, from, next) {\n  var isAuthenticated = localStorage.getItem('isLoggedIn'); // 检查登录状态\n  if (to.path !== '/' && !isAuthenticated) {\n    next('/'); // 未登录跳转到登录页面\n  } else {\n    next(); // 继续导航\n  }\n});","map":{"version":3,"names":["createRouter","createWebHistory","LoginPage","DetailsPage","IncomePage","ExpensePage","routes","path","component","router","history","beforeEach","to","from","next","isAuthenticated","localStorage","getItem"],"sources":["C:/Users/20915/IdeaProjects/financialmanagement/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\n\r\n// 导入页面组件\r\nimport LoginPage from '../views/LoginPage.vue'; // 登录页面\r\nimport DetailsPage from '../views/DetailsPage.vue'; // 收支明细页面\r\nimport IncomePage from '../views/IncomePage.vue'; // 收入记账页面\r\nimport ExpensePage from '../views/ExpensePage.vue'; // 支出记账页面\r\n\r\n// 路由定义\r\nconst routes = [\r\n    { path: '/', component: LoginPage }, // 登录页面\r\n    { path: '/analysis', component: DetailsPage }, // 收支明细页面\r\n    { path: '/income', component: IncomePage }, // 收入记账页面\r\n    { path: '/expense', component: ExpensePage }, // 支出记账页面\r\n];\r\n\r\n// 创建路由实例\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n});\r\n\r\nexport default router;\r\nrouter.beforeEach((to, from, next) => {\r\n    const isAuthenticated = localStorage.getItem('isLoggedIn'); // 检查登录状态\r\n    if (to.path !== '/' && !isAuthenticated) {\r\n        next('/'); // 未登录跳转到登录页面\r\n    } else {\r\n        next(); // 继续导航\r\n    }\r\n});\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;;AAE3D;AACA,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAChD,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AACpD,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;;AAEpD;AACA,IAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEN;AAAU,CAAC;AAAE;AACrC;EAAEK,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEL;AAAY,CAAC;AAAE;AAC/C;EAAEI,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEJ;AAAW,CAAC;AAAE;AAC5C;EAAEG,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEH;AAAY,CAAC,CAAE;AAAA,CACjD;;AAED;AACA,IAAMI,MAAM,GAAGT,YAAY,CAAC;EACxBU,OAAO,EAAET,gBAAgB,CAAC,CAAC;EAC3BK,MAAM,EAANA;AACJ,CAAC,CAAC;AAEF,eAAeG,MAAM;AACrBA,MAAM,CAACE,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EAClC,IAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;EAC5D,IAAIL,EAAE,CAACL,IAAI,KAAK,GAAG,IAAI,CAACQ,eAAe,EAAE;IACrCD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACf,CAAC,MAAM;IACHA,IAAI,CAAC,CAAC,CAAC,CAAC;EACZ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}